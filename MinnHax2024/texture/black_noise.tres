[gd_resource type="VisualShader" load_steps=19 format=3 uid="uid://dp3wwpqh4fvqw"]

[ext_resource type="Script" path="res://addons/shaderV/tools/sinTime.gd" id="1_p01fd"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_oqhtx"]
constant = Color(0.482088, 0.000433273, 0.551407, 1)

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_g1gdf"]
default_input_values = [0, 0.1, 1, 0.1]
initialized = true
script = ExtResource("1_p01fd")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_h76x3"]
default_input_values = [0, 0.0, 1, 0.3]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_5c0f5"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_nkgnj"]
noise = SubResource("FastNoiseLite_5c0f5")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ki8gb"]
texture = SubResource("NoiseTexture2D_nkgnj")
texture_type = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_fs7eg"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_puw12"]
function = 1

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_8oxfw"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_q3ubo"]
function = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6gom7"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_0jcj0"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_be2vl"]
noise = SubResource("FastNoiseLite_0jcj0")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_grcgh"]
texture = SubResource("NoiseTexture2D_be2vl")
texture_type = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ukc0f"]
default_input_values = [0, 0.0, 1, 5.0]
operator = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_h6anc"]
constant = Color(0.890196, 0.223529, 1, 1)

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ub8du"]
default_input_values = [0, 0.0, 1, 0.3, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2 : source_color;
uniform sampler2D tex_frg_13 : source_color;



void fragment() {
// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


	float n_out11p0;
// SinTIME:11
	float n_in11p0 = 0.10000;
	float n_in11p1 = 0.10000;
	{
		n_out11p0 = n_in11p1 * sin(n_in11p0 * TIME);
	}


// FloatOp:12
	float n_in12p1 = 0.30000;
	float n_out12p0 = n_out11p0 + n_in12p1;


// ColorConstant:10
	vec4 n_out10p0 = vec4(0.482088, 0.000433, 0.551407, 1.000000);


	vec3 n_out17p0;
// ColorFunc:17
	{
		vec3 c = vec3(n_out10p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out17p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// VectorDecompose:14
	float n_out14p0 = n_out17p0.x;
	float n_out14p1 = n_out17p0.y;
	float n_out14p2 = n_out17p0.z;


// Texture2D:13
	vec4 n_out13p0 = texture(tex_frg_13, UV);


// FloatOp:20
	float n_in20p1 = 5.00000;
	float n_out20p0 = n_out13p0.x / n_in20p1;


// FloatOp:19
	float n_out19p0 = n_out14p2 + n_out20p0;


// VectorCompose:16
	vec3 n_out16p0 = vec3(n_out14p0, n_out14p1, n_out19p0);


	vec3 n_out15p0;
// ColorFunc:15
	{
		vec3 c = n_out16p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out15p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// ColorConstant:7
	vec4 n_out7p0 = vec4(0.890196, 0.223529, 1.000000, 1.000000);


	vec3 n_out9p0;
// If:9
	float n_in9p2 = 0.00001;
	if(abs(n_out2p0.x - n_out12p0) < n_in9p2)
	{
		n_out9p0 = n_out15p0;
	}
	else if(n_out2p0.x < n_out12p0)
	{
		n_out9p0 = vec3(n_out7p0.xyz);
	}
	else
	{
		n_out9p0 = n_out15p0;
	}


// Output:0
	ALBEDO = n_out9p0;


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_grcgh")
nodes/fragment/2/position = Vector2(-140, 60)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_h6anc")
nodes/fragment/7/position = Vector2(-240, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeIf_ub8du")
nodes/fragment/9/position = Vector2(200, 140)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorConstant_oqhtx")
nodes/fragment/10/position = Vector2(-1280, 260)
nodes/fragment/11/node = SubResource("VisualShaderNodeCustom_g1gdf")
nodes/fragment/11/position = Vector2(-240, -80)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_h76x3")
nodes/fragment/12/position = Vector2(-40, -80)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture_ki8gb")
nodes/fragment/13/position = Vector2(-1260, 600)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorDecompose_fs7eg")
nodes/fragment/14/position = Vector2(-880, 340)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorFunc_puw12")
nodes/fragment/15/position = Vector2(-280, 400)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorCompose_8oxfw")
nodes/fragment/16/position = Vector2(-460, 360)
nodes/fragment/17/node = SubResource("VisualShaderNodeColorFunc_q3ubo")
nodes/fragment/17/position = Vector2(-1080, 360)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_6gom7")
nodes/fragment/19/position = Vector2(-680, 480)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_ukc0f")
nodes/fragment/20/position = Vector2(-880, 680)
nodes/fragment/connections = PackedInt32Array(2, 0, 9, 0, 11, 0, 12, 0, 12, 0, 9, 1, 7, 0, 9, 5, 9, 0, 0, 0, 17, 0, 14, 0, 14, 0, 16, 0, 14, 1, 16, 1, 14, 2, 19, 0, 19, 0, 16, 2, 16, 0, 15, 0, 15, 0, 9, 3, 15, 0, 9, 4, 13, 0, 20, 0, 20, 0, 19, 1, 10, 0, 17, 0)
