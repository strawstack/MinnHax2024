[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://d3a4v4xdmc0x6"]

[ext_resource type="Script" path="res://addons/shaderV/tools/sinTime.gd" id="1_d4wsl"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_na6nd"]
default_input_values = [0, 0.0, 1, 4.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_srkve"]
default_input_values = [0, 0.0, 1, 0.25]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_5weoa"]
constant = Color(0.51, 0.0612, 0.07616, 1)

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_pjlhx"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_bkgox"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_e8wqw"]
function = 1

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_rnfid"]
function = 2

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_m8if5"]
default_input_values = [0, 0.5, 1, 1.0]
initialized = true
script = ExtResource("1_d4wsl")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ksmwm"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_3ccy7"]
default_input_values = [0, 0.0, 1, 1.0]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// ColorConstant:2
	vec4 n_out2p0 = vec4(0.510000, 0.061200, 0.076160, 1.000000);


	vec3 n_out6p0;
// ColorFunc:6
	{
		vec3 c = vec3(n_out2p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out6p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// VectorDecompose:3
	float n_out3p0 = n_out6p0.x;
	float n_out3p1 = n_out6p0.y;
	float n_out3p2 = n_out6p0.z;


	float n_out7p0;
// SinTIME:7
	float n_in7p0 = 0.50000;
	float n_in7p1 = 1.00000;
	{
		n_out7p0 = n_in7p1 * sin(n_in7p0 * TIME);
	}


// FloatOp:9
	float n_in9p1 = 1.00000;
	float n_out9p0 = n_out7p0 + n_in9p1;


// FloatOp:10
	float n_in10p1 = 4.00000;
	float n_out10p0 = n_out9p0 / n_in10p1;


// FloatOp:11
	float n_in11p1 = 0.25000;
	float n_out11p0 = n_out10p0 + n_in11p1;


// FloatOp:8
	float n_out8p0 = n_out3p2 + n_out11p0;


// VectorCompose:4
	vec3 n_out4p0 = vec3(n_out3p0, n_out3p1, n_out8p0);


	vec3 n_out5p0;
// ColorFunc:5
	{
		vec3 c = n_out4p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out5p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// Output:0
	ALBEDO = n_out5p0;


}
"
graph_offset = Vector2(-591.262, -84.0539)
nodes/fragment/0/position = Vector2(660, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorConstant_5weoa")
nodes/fragment/2/position = Vector2(-500, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorDecompose_pjlhx")
nodes/fragment/3/position = Vector2(-160, 80)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorCompose_bkgox")
nodes/fragment/4/position = Vector2(260, 100)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorFunc_e8wqw")
nodes/fragment/5/position = Vector2(440, 140)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorFunc_rnfid")
nodes/fragment/6/position = Vector2(-360, 100)
nodes/fragment/7/node = SubResource("VisualShaderNodeCustom_m8if5")
nodes/fragment/7/position = Vector2(-700, 280)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_ksmwm")
nodes/fragment/8/position = Vector2(40, 220)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_3ccy7")
nodes/fragment/9/position = Vector2(-480, 280)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_na6nd")
nodes/fragment/10/position = Vector2(-300, 280)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_srkve")
nodes/fragment/11/position = Vector2(-120, 300)
nodes/fragment/connections = PackedInt32Array(2, 0, 6, 0, 6, 0, 3, 0, 3, 0, 4, 0, 3, 1, 4, 1, 3, 2, 8, 0, 8, 0, 4, 2, 4, 0, 5, 0, 5, 0, 0, 0, 7, 0, 9, 0, 9, 0, 10, 0, 10, 0, 11, 0, 11, 0, 8, 1)
